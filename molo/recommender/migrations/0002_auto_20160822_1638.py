# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-08-22 01:23
from __future__ import unicode_literals

from django.db import migrations
from django.contrib.auth.models import User
from recommender.models import Movie, Rater, Rating, AgeRange, Genre, Occupation
import re
import random
import datetime
import pytz


fnames = []
lnames = []
with open('../data/fnames.dat') as f:
    for line in f:
        fnames.append(line.strip())
with open('../data/lnames.dat') as f:
    for line in f:
        lnames.append(line.strip())


def rand_user(id):
    fname = random.choice(fnames)
    lname = random.choice(lnames)
    out = {'id': id,
           'username': 'user%s' % id,
           'password': 'password%s' % id,
           'email': '%s.%s@mailinator.com' % (fname, lname),
           'first_name': fname,
           'last_name': lname}
    return out


# TODO reset table counters at the end of this migration.
def import_all_the_things(apps, schema_editor):
    path = '../data/'
#   movies.dat  ratings.dat users.dat, genres.dat, ages, occupations
# ratings.dat users.dat, ages.dat, occupations.dat
    print('\nGENRES', datetime.datetime.now())
    genres = {}
    with open(path + 'genres.dat', 'r') as f:
        for line in f:
            id, name = line.strip().split(':')
            g = Genre(id=id, name=name)
            g.save()
            genres[name] = g
    print('MOVIES', datetime.datetime.now())
    with open(path + 'movies.dat', 'r', encoding='latin_1') as f:
        for line in f:
            id, title, gs = line.strip().split('::')
            year = re.findall(r'\((\d{4})\)', title)
            year = year[0]
            title = title.replace('(%s)' % year, '').strip()
            m = Movie(id=id, title=title, year=year)
            m.save()

            for genre in gs.split('|'):
                m.genres.add(genres[genre])
    print('AGES', datetime.datetime.now())
    ages = {}
    with open(path + 'ages.dat', 'r', encoding='latin_1') as f:
        for line in f:
            value, desc = line.strip().split(':')
            a = AgeRange(value=value, description=desc)
            a.save()
            ages[value] = a
    print('OCCUPATIONS', datetime.datetime.now())
    occupations = {}
    with open(path + 'occupations.dat', 'r', encoding='latin_1') as f:
        for line in f:
            id, desc = line.strip().split(':')
            o = Occupation(id=id, name=desc)
            o.save()
            occupations[id] = o
    print('USERS', datetime.datetime.now())
    with open(path + 'users.dat', 'r', encoding='latin_1') as f:
        for line in f:
            id, gender, age, occupation, zipcode = line.strip().split('::')
            u = User.objects.create_user(**rand_user(id))
            u.save()
            r = Rater(id=id, gender=gender, age_range_id=ages[age].id,
                      occupation_id=occupation, zipcode=zipcode, user_id=id)
            r.save()
    print('RATINGS', datetime.datetime.now())
    count = 0
    with open(path + 'ratings.dat', 'r', encoding='latin_1') as f:
        new_york_tz = pytz.timezone("America/New_York")
        for line in f:
            if count % 1000 == 0:
                print(count, datetime.datetime.now())
            rater_id, movie_id, rating, rate_time = line.strip().split('::')
            rate_time = new_york_tz.localize(datetime.datetime.fromtimestamp(int(rate_time)))
            r = Rating(movie_id=movie_id, rater_id=rater_id,
                       rating=rating, rate_time=rate_time)
            r.save()
            count += 1


class Migration(migrations.Migration):

    dependencies = [
        ('recommender', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(import_all_the_things)
    ]
